@page "/"
@using AntDesign
@using AntDesign.TableModels
@using Grpc.Net.Client
@using ProtoBuf.Grpc.Client
@using Shared
@rendermode InteractiveServer

<PageTitle>Home</PageTitle>



<Notification />
<Table DataSource="@students"
       RowKey="s => s.Id"
       PageIndex="pageNumber"
       Loading="@(students == null)"
       Total="total"
       PageSize="pageSize"
       HidePagination="(total <= pageSize)"
       OnPageIndexChange="HandlePageIndexChangeAsync"
       OnPageSizeChange="HandlePageSizeChangeAsync"
       @bind-SelectedRows="_selectedRows">
       
    <TitleTemplate>
        <div class="d-flex justify-content-between align-items-center" style="margin-bottom: 10px">

            <div style="float:left">
                <div>
                    <Input @bind-Value="keywordId" Placeholder="Nhập mã..." Style="width: 100px;" />
                    <Input @bind-Value="keyword" Placeholder="Nhập tên sinh viên..." Style="width: 180px;" />
                    <Select DataSource="@classrooms"
                            @bind-Value="SelectedClassroomID"
                            ItemValue="c => c.Id"
                            ItemLabel="c => c.NameClassroom"
                            Placeholder="Lớp..."
                            Style="width: 100px"
                            AllowClear="true">
                    </Select>
                    <Select DataSource="@teachers"
                            @bind-Value="SelectedTeacherID"
                            ItemValue="t => t.Id"
                            ItemLabel="t => t.NameTeacher"
                            Placeholder="Giáo viên..."
                            Style="width: 150px"
                            AllowClear="true">
                    </Select>
                    <Button Type="ButtonType.Primary" OnClick="SearchStudentAsync" Style="margin-left: 10px;">
                        Tìm kiếm
                    </Button>
                    
                </div>
            </div>
            <div style="float:right">
                <Button Style="margin-left: 50px; background-color: green" Type="ButtonType.Primary" OnClick="@(e => OpenPopup(isCreate: true))">Add new student</Button>
                <Dropdown Trigger="@(new Trigger[] { Trigger.Click })">
                    <Overlay>
                        <Menu OnMenuItemClicked="OnSortAsync">
                            <MenuItem Key="sbId">
                                <Text>Sort by student code</Text>
                            </MenuItem>
                            <MenuItem Key="sbName">
                                <Text>Sort by Name</Text>
                            </MenuItem>
                            <MenuItem Key="sbRemove">
                                <Text>Remove Sort</Text>
                            </MenuItem>
                        </Menu>
                    </Overlay>
                    <ChildContent>
                        <Button>
                            Sort by <Icon Type="caret-down" />
                        </Button>
                    </ChildContent>
                </Dropdown>
                <Button OnClick="ExportExcelAsync">Export Excel</Button>
                <Popconfirm Title="Sure to delete?"
                            OnConfirm="()=> DeleteManyStudentAsync()"
                            OkText="Yes"
                            CancelText="No">
                    <Button Style="margin-left:10px" Disabled="@(_selectedRows.Count() < 2)" Danger>Delete All</Button>
                </Popconfirm>
            </div>
        </div>
    </TitleTemplate>
    <ColumnDefinitions Context="row">
        <Selection />
        <ColumnDefinition Title="Index">
            @{
                int index = students!.IndexOf(row) + 1 + ((pageNumber - 1) * pageSize);
            }
            @index
        </ColumnDefinition>

        <PropertyColumn Property="s => s.Id" Title="Class Id" />
        <PropertyColumn Property="s => s.studentName" Title="Full Name" />
        <PropertyColumn Property="s => s.studentBirthday" Title="Birthday" Format="dd/MM/yyyy" />
        <PropertyColumn Property="s => s.studentAddress" Title="Address" />
        <PropertyColumn Property="s => s.classroomName" Title="Class Name" />
        
        <ActionColumn Title="Action">
            <Button OnClick="@(() => OpenPopup(row))">Update</Button>
            <Button Style="margin-left:10px" OnClick="@(() => OpenPopup(row, isDetails: true))">Details</Button>
            <Popconfirm Title="Sure to delete?"
                        OnConfirm="()=> DeleteStudentAsync(row.Id)"
                        OkText="Yes"
                        CancelText="No">
                <Button Style="margin-left:10px" Danger>Delete</Button>
            </Popconfirm>
            
        </ActionColumn>
    </ColumnDefinitions>
</Table>

@if(visible)
{
    <StudentPopup Visible="visible" Student="Student" ReloadStudents="LoadStudentsAsync" OnClose="ClosePopupAsync" IsCreate="isCreate" IsDetails="isDetails" />
}

<script src="https://cdn.sheetjs.com/xlsx-latest/package/dist/xlsx.full.min.js"></script>
<script>
            window.downloadFileFromBytes = (fileName, bytesBase64) => {
        const link = document.createElement('a');
        link.href = "data:application/octet-stream;base64," + bytesBase64;
        link.download = fileName;
        link.click();
    };
</script>


